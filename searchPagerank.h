#ifndef SEARCHPAGERANK_H#define SEARCHPAGERANK_H#endif#include <stdio.h>#include <stdlib.h>#include "DLList.h"DLList findUrls (FILE *f, char ** searchWords, int);void findPagerank (FILE *f, DLList urls, FILE *stdout);/* char * urls = malloc(maxUrls*sizeof(char *)); //  char * urls2 = malloc(maxUrls*sizeof(char *));  while(count < numWords) { //loop to go through each search word in the search f = fopen("invertedIndex.txt", "r"); while (fscanf(f,"%s", &urls[k]) != EOF) { //read through the file till the END of file  if((strcmp(searchWords[count], &urls[k]) == 0)) { //if we've found our search word  while(DLListLength(matchedUrls) < maxUrls){//keep scaning through the urls to add in the list UNTIL we reach anothe word OR EOF.  fscanf(f, "%s", &urls[k]);  if(count == 0) { DLListAfter(matchedUrls, &urls[k]); } //if we havae scanned through all the urls if(fgetc(f) == '\n') {  break; }  else { //if we have more than one search word: //printf("here \n"); while(DLListLength(matchedUrls) > i){  //we need to compare urls - by traversing through the urls existing printf("matched url: %s,  %s\n ",matchedUrls->first->data, &urls[i]); if(strcmp(matchedUrls->first->data, &urls[i]) == 0) { //if we've found a matched url for both words printf("matched url: %s,  %s\n ",matchedUrls->first->data, &urls[i]); matchedUrls->first = matchedUrls->first->next; //traverse the list. break; //exit to look for the next matching url } else { //else if we don't find a matched url DLListDelete(matchedUrls); //we want to remove this url from the list. printf("deleted \n"); } matchedUrls->first = matchedUrls->first->next; i++; } }  }   }   //DLListAfter(matchedUrls, urls); k++; }  count++; fclose(f);   }*/