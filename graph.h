// Graph.h ... interface to Graph ADT// Written by John Shepherd, March 2013#ifndef GRAPH_H#define GRAPH_H#include <stdio.h>#include <stdlib.h>// graph representation is hiddentypedef struct GraphRep *Graph;// vertices denoted by integers 0..N-1typedef char Vertex;int   validV(Graph,Vertex); //validity check// edges are pairs of vertices (end-points)// graph representation (adjacency matrix)typedef struct GraphRep {    int    nV;    // #vertices    int    nE;    // #edges    int  **edges; // matrix of weights (0 == no edge) // a pointer to the start of the array of edges} GraphRep;typedef struct {    Vertex v;    Vertex w;} Edge;void insertEdge(Graph, Vertex v, Vertex w);void removeEdge(Graph, Vertex v , Vertex w);// operations on graphsGraph newGraph(int nV);void dropGraph(Graph);Graph makeGraph(int, int**);void showGraph(Graph, char **);//int  findPath(Graph, Vertex, Vertex, int, int *);#endif